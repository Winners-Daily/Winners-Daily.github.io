{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ameer\\\\Documents\\\\website\\\\Winners-Daily.github.io\\\\components\\\\Nav.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\nimport FullMenu from './FullMenu';\nimport HamburgerMenu from './HamburgerMenu';\n\nvar useMediaQuery = function useMediaQuery(width) {\n  _s();\n\n  var _useState = useState(false),\n      targetReached = _useState[0],\n      setTargetReached = _useState[1];\n\n  var updateTarget = useCallback(function (e) {\n    if (e.matches) {\n      setTargetReached(true);\n    } else {\n      setTargetReached(false);\n    }\n  }, []);\n  useEffect(function () {\n    var media = window.matchMedia(\"(max-width: \".concat(width, \"px)\"));\n    media.addListener(updateTarget); // Check on mount (callback is not called until a change occurs)\n\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return function () {\n      return media.removeListener(updateTarget);\n    };\n  }, []);\n  return targetReached;\n};\n\n_s(useMediaQuery, \"3YJ+medpEEIXi9i+LP+brdzS5O0=\");\n\nvar Navbar = function Navbar() {\n  _s2();\n\n  var isBreakpoint = useMediaQuery(768);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isBreakpoint ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FullMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(Navbar, \"atqENnNhZG7oggUbAQeVzcs3bJc=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/ameer/Documents/website/Winners-Daily.github.io/components/Nav.js"],"names":["useState","useCallback","useEffect","FullMenu","HamburgerMenu","useMediaQuery","width","targetReached","setTargetReached","updateTarget","e","matches","media","window","matchMedia","addListener","removeListener","Navbar","isBreakpoint"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACWN,QAAQ,CAAC,KAAD,CADnB;AAAA,MACxBO,aADwB;AAAA,MACTC,gBADS;;AAG/B,MAAMC,YAAY,GAAGR,WAAW,CAAC,UAACS,CAAD,EAAO;AACtC,QAAIA,CAAC,CAACC,OAAN,EAAe;AACbH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAN+B,EAM7B,EAN6B,CAAhC;AAQAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,KAAK,GAAGC,MAAM,CAACC,UAAP,uBAAiCR,KAAjC,SAAd;AACAM,IAAAA,KAAK,CAACG,WAAN,CAAkBN,YAAlB,EAFc,CAId;;AACA,QAAIG,KAAK,CAACD,OAAV,EAAmB;AACjBH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAED,WAAO;AAAA,aAAMI,KAAK,CAACI,cAAN,CAAqBP,YAArB,CAAN;AAAA,KAAP;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOF,aAAP;AACD,CAxBD;;GAAMF,a;;AA2BN,IAAMY,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACnB,MAAMC,YAAY,GAAGb,aAAa,CAAC,GAAD,CAAlC;AACA,sBACE;AAAA,cACGa,YAAY,gBACX;AAAA,6BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADW,gBAKX;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAjBD;;IAAMD,M;UACiBZ,a;;;KADjBY,M;AAmBN,eAAeA,MAAf","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport FullMenu from './FullMenu';\nimport HamburgerMenu from './HamburgerMenu';\n\nconst useMediaQuery = (width) => {\n  const [targetReached, setTargetReached] = useState(false);\n\n  const updateTarget = useCallback((e) => {\n    if (e.matches) {\n      setTargetReached(true);\n    } else {\n      setTargetReached(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const media = window.matchMedia(`(max-width: ${width}px)`);\n    media.addListener(updateTarget);\n\n    // Check on mount (callback is not called until a change occurs)\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return () => media.removeListener(updateTarget);\n  }, []);\n\n  return targetReached;\n};\n\n\nconst Navbar = () => {\n  const isBreakpoint = useMediaQuery(768)\n  return (\n    <div>\n      {isBreakpoint ? (\n        <div>\n          <HamburgerMenu />\n        </div>\n      ) : (\n        <div>\n          <FullMenu />\n        </div>\n      )\n    \n    }\n    </div>\n  )\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}