{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ameer\\\\Documents\\\\website\\\\Winners-Daily.github.io\\\\components\\\\Counter.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { InView } from 'react-intersection-observer'; //styling\n\nimport '../styles/counter.module.css';\n\nvar Count = function Count(props) {\n  _s();\n\n  // label of counter\n  // number to increment to\n  // duration of count in seconds\n  var label = props.lable;\n  var number = props.number;\n  var duration = props.duration; // number displayed by component\n\n  var _useState = useState(\"0\"),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  useEffect(function () {\n    var start = 0; // first three numbers from props\n\n    var end = parseInt(number.substring(0, 3)); // if zero, return\n\n    if (start === end) return; // find duration per increment\n\n    var totalMilSecDur = parseInt(duration);\n    var incrementTime = totalMilSecDur / end * 1000; // timer increments start counter \n    // then updates count\n    // ends if start reaches end\n\n    var timer = setInterval(function () {\n      start += 1;\n      setCount(String(start) + number.substring(3));\n      if (start === end) clearInterval(timer);\n    }, incrementTime); // dependency array\n  }, [number, duration]);\n\n  function resetCounter(entry) {\n    if (entry) {\n      setCount(\"0\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Count\",\n    children: /*#__PURE__*/_jsxDEV(InView, {\n      as: ref,\n      onChange: function onChange(inView, entry) {\n        return resetCounter(entry);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            font: \"800 40px system-ui\"\n          },\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Count, \"e9WYKlY6D86hItDa7BwgUK75Iv8=\");\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["C:/Users/ameer/Documents/website/Winners-Daily.github.io/components/Counter.js"],"names":["React","useEffect","useState","InView","Count","props","label","lable","number","duration","count","setCount","start","end","parseInt","substring","totalMilSecDur","incrementTime","timer","setInterval","String","clearInterval","resetCounter","entry","ref","inView","font"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,6BAAvB,C,CAEA;;AACA,OAAO,8BAAP;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA;;AACnB;AACA;AACA;AACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAApB;AACA,MAAMC,MAAM,GAAGH,KAAK,CAACG,MAArB;AACA,MAAMC,QAAQ,GAAIJ,KAAK,CAACI,QAAxB,CANmB,CAQnB;;AARmB,kBASOP,QAAQ,CAAC,GAAD,CATf;AAAA,MASZQ,KATY;AAAA,MASLC,QATK;;AAYnBV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIW,KAAK,GAAG,CAAZ,CADY,CAEZ;;AACA,QAAMC,GAAG,GAAGC,QAAQ,CAACN,MAAM,CAACO,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAD,CAApB,CAHY,CAIZ;;AACA,QAAIH,KAAK,KAAKC,GAAd,EAAmB,OALP,CAOZ;;AACA,QAAIG,cAAc,GAAGF,QAAQ,CAACL,QAAD,CAA7B;AACA,QAAIQ,aAAa,GAAID,cAAc,GAAGH,GAAlB,GAAyB,IAA7C,CATY,CAWZ;AACA;AACA;;AACA,QAAIK,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC1BP,MAAAA,KAAK,IAAI,CAAT;AACAD,MAAAA,QAAQ,CAACS,MAAM,CAACR,KAAD,CAAN,GAAgBJ,MAAM,CAACO,SAAP,CAAiB,CAAjB,CAAjB,CAAR;AACA,UAAIH,KAAK,KAAKC,GAAd,EAAmBQ,aAAa,CAACH,KAAD,CAAb;AACtB,KAJsB,EAIpBD,aAJoB,CAAvB,CAdY,CAoBZ;AACH,GArBQ,EAqBN,CAACT,MAAD,EAASC,QAAT,CArBM,CAAT;;AAuBA,WAASa,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,QAAGA,KAAH,EAAS;AACLZ,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAEa,GAAZ;AAAiB,MAAA,QAAQ,EAAE,kBAACC,MAAD,EAASF,KAAT;AAAA,eAAmBD,YAAY,CAACC,KAAD,CAA/B;AAAA,OAA3B;AAAA,6BAEI;AAAA,+BACI;AAAG,UAAA,KAAK,EAAE;AAAEG,YAAAA,IAAI,EAAE;AAAR,WAAV;AAAA,oBAA2ChB;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CArDD;;GAAMN,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { InView } from 'react-intersection-observer';\r\n\r\n//styling\r\nimport '../styles/counter.module.css';\r\n\r\n\r\nconst Count = props => {\r\n    // label of counter\r\n    // number to increment to\r\n    // duration of count in seconds\r\n    const label = props.lable\r\n    const number = props.number\r\n    const duration  = props.duration\r\n\r\n    // number displayed by component\r\n    const [count, setCount] = useState(\"0\")\r\n    \r\n    \r\n    useEffect(() => {\r\n        let start = 0;\r\n        // first three numbers from props\r\n        const end = parseInt(number.substring(0, 3))\r\n        // if zero, return\r\n        if (start === end) return;\r\n\r\n        // find duration per increment\r\n        let totalMilSecDur = parseInt(duration);\r\n        let incrementTime = (totalMilSecDur / end) * 1000;\r\n\r\n        // timer increments start counter \r\n        // then updates count\r\n        // ends if start reaches end\r\n        let timer = setInterval(() => {\r\n            start += 1;\r\n            setCount(String(start) + number.substring(3))\r\n            if (start === end) clearInterval(timer)\r\n        }, incrementTime);\r\n\r\n        // dependency array\r\n    }, [number, duration]);\r\n\r\n    function resetCounter(entry){\r\n        if(entry){\r\n            setCount(\"0\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Count\">\r\n            <InView as={ref} onChange={(inView, entry) => resetCounter(entry)}>\r\n                        \r\n                <h3>\r\n                    <i style={{ font: \"800 40px system-ui\" }}>{count}</i>\r\n                </h3>\r\n                  \r\n                \r\n            </InView>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Count;"]},"metadata":{},"sourceType":"module"}