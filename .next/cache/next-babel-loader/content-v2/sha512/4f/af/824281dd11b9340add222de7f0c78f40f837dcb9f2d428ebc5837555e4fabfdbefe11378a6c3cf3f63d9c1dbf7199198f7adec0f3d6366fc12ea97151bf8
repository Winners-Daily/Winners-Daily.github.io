{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ameer\\\\Documents\\\\website\\\\Winners-Daily.github.io\\\\components\\\\Nav.js\";\nimport { useState, useCallback, useEffect } from 'react';\nimport FullMenu from './FullMenu';\nimport HamburgerMenu from './HamburgerMenu';\n\nconst useMediaQuery = width => {\n  const {\n    0: targetReached,\n    1: setTargetReached\n  } = useState(false);\n  const updateTarget = useCallback(e => {\n    if (e.matches) {\n      setTargetReached(true);\n    } else {\n      setTargetReached(false);\n    }\n  }, []);\n  useEffect(() => {\n    const media = window.matchMedia(`(max-width: ${width}px)`);\n    media.addListener(updateTarget); // Check on mount (callback is not called until a change occurs)\n\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return () => media.removeListener(updateTarget);\n  }, []);\n  return targetReached;\n};\n\nconst Navbar = () => {\n  const isBreakpoint = useMediaQuery(768);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isBreakpoint ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FullMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Navbar;","map":{"version":3,"sources":["C:/Users/ameer/Documents/website/Winners-Daily.github.io/components/Nav.js"],"names":["useState","useCallback","useEffect","FullMenu","HamburgerMenu","useMediaQuery","width","targetReached","setTargetReached","updateTarget","e","matches","media","window","matchMedia","addListener","removeListener","Navbar","isBreakpoint"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCR,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMS,YAAY,GAAGR,WAAW,CAAES,CAAD,IAAO;AACtC,QAAIA,CAAC,CAACC,OAAN,EAAe;AACbH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAN+B,EAM7B,EAN6B,CAAhC;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,KAAK,GAAGC,MAAM,CAACC,UAAP,CAAmB,eAAcR,KAAM,KAAvC,CAAd;AACAM,IAAAA,KAAK,CAACG,WAAN,CAAkBN,YAAlB,EAFc,CAId;;AACA,QAAIG,KAAK,CAACD,OAAV,EAAmB;AACjBH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAED,WAAO,MAAMI,KAAK,CAACI,cAAN,CAAqBP,YAArB,CAAb;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOF,aAAP;AACD,CAxBD;;AA2BA,MAAMU,MAAM,GAAG,MAAM;AACnB,QAAMC,YAAY,GAAGb,aAAa,CAAC,GAAD,CAAlC;AACA,sBACE;AAAA,cACGa,YAAY,gBACX;AAAA,6BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADW,gBAKX;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjBD;;AAmBA,eAAeD,MAAf","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport FullMenu from './FullMenu';\nimport HamburgerMenu from './HamburgerMenu';\n\nconst useMediaQuery = (width) => {\n  const [targetReached, setTargetReached] = useState(false);\n\n  const updateTarget = useCallback((e) => {\n    if (e.matches) {\n      setTargetReached(true);\n    } else {\n      setTargetReached(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const media = window.matchMedia(`(max-width: ${width}px)`);\n    media.addListener(updateTarget);\n\n    // Check on mount (callback is not called until a change occurs)\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return () => media.removeListener(updateTarget);\n  }, []);\n\n  return targetReached;\n};\n\n\nconst Navbar = () => {\n  const isBreakpoint = useMediaQuery(768)\n  return (\n    <div>\n      {isBreakpoint ? (\n        <div>\n          <HamburgerMenu />\n        </div>\n      ) : (\n        <div>\n          <FullMenu />\n        </div>\n      )\n    \n    }\n    </div>\n  )\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}