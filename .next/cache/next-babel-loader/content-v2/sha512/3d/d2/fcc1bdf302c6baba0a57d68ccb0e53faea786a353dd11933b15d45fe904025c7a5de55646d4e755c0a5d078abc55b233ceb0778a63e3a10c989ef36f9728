{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ameer\\\\Documents\\\\website\\\\Winners-Daily.github.io\\\\components\\\\Counter.js\";\nimport React, { useEffect, useState } from 'react';\nimport { InView } from 'react-intersection-observer'; //styling\n\nimport '../styles/counter.module.css';\n\nconst Count = props => {\n  // label of counter\n  // number to increment to\n  // duration of count in seconds\n  const label = props.lable;\n  const number = props.number;\n  const duration = props.duration; // number displayed by component\n\n  const {\n    0: count,\n    1: setCount\n  } = useState(\"0\");\n  useEffect(() => {\n    let start = 0; // first three numbers from props\n\n    const end = parseInt(number.substring(0, 3)); // if zero, return\n\n    if (start === end) return; // find duration per increment\n\n    let totalMilSecDur = parseInt(duration);\n    let incrementTime = totalMilSecDur / end * 1000; // timer increments start counter \n    // then updates count\n    // ends if start reaches end\n\n    let timer = setInterval(() => {\n      start += 1;\n      setCount(String(start) + number.substring(3));\n      if (start === end) clearInterval(timer);\n    }, incrementTime); // dependency array\n  }, [number, duration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Count\",\n    children: /*#__PURE__*/_jsxDEV(InView, {\n      children: ({\n        inView,\n        ref,\n        entry\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: `Header inside viewport ${inView}.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              font: \"800 40px system-ui\"\n            },\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Count;","map":{"version":3,"sources":["C:/Users/ameer/Documents/website/Winners-Daily.github.io/components/Counter.js"],"names":["React","useEffect","useState","InView","Count","props","label","lable","number","duration","count","setCount","start","end","parseInt","substring","totalMilSecDur","incrementTime","timer","setInterval","String","clearInterval","inView","ref","entry","font"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,6BAAvB,C,CAEA;;AACA,OAAO,8BAAP;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB;AACA;AACA;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACE,KAApB;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACG,MAArB;AACA,QAAMC,QAAQ,GAAIJ,KAAK,CAACI,QAAxB,CANmB,CAQnB;;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,GAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,KAAK,GAAG,CAAZ,CADY,CAEZ;;AACA,UAAMC,GAAG,GAAGC,QAAQ,CAACN,MAAM,CAACO,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAD,CAApB,CAHY,CAIZ;;AACA,QAAIH,KAAK,KAAKC,GAAd,EAAmB,OALP,CAOZ;;AACA,QAAIG,cAAc,GAAGF,QAAQ,CAACL,QAAD,CAA7B;AACA,QAAIQ,aAAa,GAAID,cAAc,GAAGH,GAAlB,GAAyB,IAA7C,CATY,CAWZ;AACA;AACA;;AACA,QAAIK,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC1BP,MAAAA,KAAK,IAAI,CAAT;AACAD,MAAAA,QAAQ,CAACS,MAAM,CAACR,KAAD,CAAN,GAAgBJ,MAAM,CAACO,SAAP,CAAiB,CAAjB,CAAjB,CAAR;AACA,UAAIH,KAAK,KAAKC,GAAd,EAAmBQ,aAAa,CAACH,KAAD,CAAb;AACtB,KAJsB,EAIpBD,aAJoB,CAAvB,CAdY,CAoBZ;AACH,GArBQ,EAqBN,CAACT,MAAD,EAASC,QAAT,CArBM,CAAT;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI,QAAC,MAAD;AAAA,gBACK,CAAC;AAAEa,QAAAA,MAAF;AAAUC,QAAAA,GAAV;AAAeC,QAAAA;AAAf,OAAD,kBACG;AAAK,QAAA,GAAG,EAAED,GAAV;AAAA,gCACI;AAAA,oBAAM,0BAAyBD,MAAO;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAG,YAAA,KAAK,EAAE;AAAEG,cAAAA,IAAI,EAAE;AAAR,aAAV;AAAA,sBAA0Cf;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjDD;;AAmDA,eAAeN,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { InView } from 'react-intersection-observer';\r\n\r\n//styling\r\nimport '../styles/counter.module.css';\r\n\r\n\r\nconst Count = props => {\r\n    // label of counter\r\n    // number to increment to\r\n    // duration of count in seconds\r\n    const label = props.lable\r\n    const number = props.number\r\n    const duration  = props.duration\r\n\r\n    // number displayed by component\r\n    const [count, setCount] = useState(\"0\")\r\n\r\n    useEffect(() => {\r\n        let start = 0;\r\n        // first three numbers from props\r\n        const end = parseInt(number.substring(0, 3))\r\n        // if zero, return\r\n        if (start === end) return;\r\n\r\n        // find duration per increment\r\n        let totalMilSecDur = parseInt(duration);\r\n        let incrementTime = (totalMilSecDur / end) * 1000;\r\n\r\n        // timer increments start counter \r\n        // then updates count\r\n        // ends if start reaches end\r\n        let timer = setInterval(() => {\r\n            start += 1;\r\n            setCount(String(start) + number.substring(3))\r\n            if (start === end) clearInterval(timer)\r\n        }, incrementTime);\r\n\r\n        // dependency array\r\n    }, [number, duration]);\r\n\r\n    return (\r\n        <div className=\"Count\">\r\n            <InView>\r\n                {({ inView, ref, entry }) => (\r\n                    <div ref={ref}>\r\n                        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n                        <h3>\r\n                            <i style={{ font: \"800 40px system-ui\"}}>{count}</i>\r\n                        </h3>\r\n                    </div>\r\n                )}\r\n                \r\n            </InView>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Count;"]},"metadata":{},"sourceType":"module"}